<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Google Cloud on Theo&#39;s lab</title>
    <link>https://theoseo.github.io/kr/tags/google-cloud/</link>
    <description>Recent content in Google Cloud on Theo&#39;s lab</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 06 Dec 2019 17:41:38 +0900</lastBuildDate>
    
	<atom:link href="https://theoseo.github.io/kr/tags/google-cloud/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>TensorFlow Serving을 Cloud Run로 서비스 하기</title>
      <link>https://theoseo.github.io/kr/2019/12/tensorflow-serving%EC%9D%84-cloud-run%EB%A1%9C-%EC%84%9C%EB%B9%84%EC%8A%A4-%ED%95%98%EA%B8%B0/</link>
      <pubDate>Fri, 06 Dec 2019 17:41:38 +0900</pubDate>
      
      <guid>https://theoseo.github.io/kr/2019/12/tensorflow-serving%EC%9D%84-cloud-run%EB%A1%9C-%EC%84%9C%EB%B9%84%EC%8A%A4-%ED%95%98%EA%B8%B0/</guid>
      <description>TensorFlow Serving을 Cloud Run으로 서비스하기 위해 TensorFlow Serving에서 공식적으로 제공하는 Dockerfile에 대한 수정으로 Cloud Run에 Deploy 가능 하도록 함.
예제 및 간단한 설명
REST API 용 PORT 수정  TensorFlow Serving은 REST API와 gRPC로 서비스가 가능하고 각각 8501, 8500 포트를 사용함. Cloud Run은 기본적으로 8080 포트로 서비스 되며 사용자가 임의로 바꿀 수 없어 Docker의 환경 변수로 입력 받도록 세팅해야함.  # RESTEXPOSE${PORT}# Create a script that runs the model server so we can use environment variables# while also passing in arguments from the docker command lineRUN echo &amp;#39;#!</description>
    </item>
    
    <item>
      <title>구글 클라우드에서 Docker 빌드하기</title>
      <link>https://theoseo.github.io/kr/2017/02/%EA%B5%AC%EA%B8%80-%ED%81%B4%EB%9D%BC%EC%9A%B0%EB%93%9C%EC%97%90%EC%84%9C-docker-%EB%B9%8C%EB%93%9C%ED%95%98%EA%B8%B0/</link>
      <pubDate>Mon, 06 Feb 2017 11:39:27 +0900</pubDate>
      
      <guid>https://theoseo.github.io/kr/2017/02/%EA%B5%AC%EA%B8%80-%ED%81%B4%EB%9D%BC%EC%9A%B0%EB%93%9C%EC%97%90%EC%84%9C-docker-%EB%B9%8C%EB%93%9C%ED%95%98%EA%B8%B0/</guid>
      <description>Docker 설치하기 구글클라우드 Compute Engine에서 Ubuntu 16.04 LTS 인스턴스 런치 후 SSH로 접속 후 아래의 명령어로 도커를 설치한다.
$ sudo apt-get update $ sudo apt-get install docker.io $ sudo usermod -aG docker $USER Dockerfile 빌드하기 원하는 시스템 설정의 Dockerfile을 작성하거나 다운 받는다. 본 예제의 경우 Newsmine 프로젝트의 Dockerfile을 Git 허브로 부터 직접 다운 받는다. Dockerfile이 존재하는 디렉토리에서 아래의 명령을 실행하면 Docker 빌드가 시작된다.
$ sudo docker build --tag newsmine:latest . Build 명령을 실행하면 Dockerfile에서 요구하는 패키지들을 다운받고 필요한 설치 명령이 수행된다.</description>
    </item>
    
  </channel>
</rss>